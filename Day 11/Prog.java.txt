Write a Java program to print all permutations of a given string.

Description:
Here is the steps to implement string permutations:
Take out the first char and keep it constant. And permute rest of the characters.
User recursive method call to permute rest of the string except first character.
While making recursive call, we accumulate each character being constant along with 
recursive call response.

Program:
class Permutation { 
	public static void main(String[] args) 
	{ 
		String str = "DOG"; 
		int n = str.length(); 
		Permutation permutation = new Permutation(); 
		permutation.permute(str, 0, n - 1); 
	} 
private void permute(String str, int l, int r) 
	{ 
		if (l == r) 
			System.out.println(str); 
		else { 
			for (int i = l; i <= r; i++) { 
				str = swap(str, l, i); 
				permute(str, l + 1, r); 
				str = swap(str, l, i); 
			} 
		} 
	} 
public String swap(String a, int i, int j) 
	{ 
		char temp; 
		char[] charArray = a.toCharArray(); 
		temp = charArray[i]; 
		charArray[i] = charArray[j]; 
		charArray[j] = temp; 
		return String.valueOf(charArray); 
	} 
} 

Output:
DOG
DGO
ODG
OGD
GOD
GDO

